name: Build

on:
  push:
    paths:
      - '**.c'
      - '**.cpp'
      - '**.h'
      - '**.hpp'
      - '**.cmake'
      - '**/CMakeLists.txt'
      - '.github/workflows/build.yml'
  pull_request:
    paths:
      - '**.c'
      - '**.cpp'
      - '**.h'
      - '**.hpp'
      - '**.cmake'
      - '**/CMakeLists.txt'
      - '.github/workflows/build.yml'

jobs:
  Build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
            name: "Windows-MSVC/2019/Static/X64/Release",
            os: windows-2019,
            config: Release,
            cmake_extra_args: -G "Visual Studio 16 2019" -A x64 -DCMAKE_CXX_FLAGS="/O2",
            sudocmd: "",
            artifact_name: "Windows x64",
            cores: 2,
            build_single_header: "OFF",
          }
          - {
            name: "Ubuntu/20.04/Static/X64/Release",
            os: ubuntu-20.04,
            config: Release,
            cmake_extra_args: "-DCMAKE_C_COMPILER=/usr/bin/gcc-10 -DCMAKE_CXX_COMPILER=/usr/bin/g++-10  -DCMAKE_CXX_FLAGS=\"-O2\"",
            sudocmd: "sudo",
            artifact_name: "Linux",
            cores: 2,
            build_single_header: "ON",
          }
          - {
            name: "MacOSX/10.15/Static/X64/Release",
            os: macos-10.15,
            config: Release,
            cmake_extra_args: "-DCMAKE_CXX_FLAGS=\"-O2\"",
            sudocmd: "sudo",
            artifact_name: "MacOSX",
            cores: 4,
            build_single_header: "OFF",
          }
    steps:
      - uses: actions/checkout@v2
      - name: Create Work Dir
        run: mkdir build
      - name: Configure
        working-directory: ./build
        run: |
          cmake .. ${{ matrix.config.cmake_extra_args }} -DCMAKE_BUILD_TYPE=${{ matrix.config.config }} -DFUTURES_BUILD_WITH_PEDANTIC_WARNINGS=ON -DFUTURES_BUILD_SINGLE_HEADER=${{ matrix.config.build_single_header }}
      - name: Build
        working-directory: ./build
        run: cmake --build . --parallel ${{ matrix.config.cores }} --config ${{ matrix.config.config }}
      - name: Test
        working-directory: ./build
        run: ctest --parallel ${{ matrix.config.cores }} -C ${{ matrix.config.config }} --verbose
      - name: Install
        working-directory: ./build
        run: ${{ matrix.config.sudocmd }} cmake --install .
#      - name: Integration Test
#        working-directory: ./test/integration
#        run: |
#          mkdir build
#          cd build
#          cmake .. ${{ matrix.config.cmake_extra_args }} -DCMAKE_BUILD_TYPE=${{ matrix.config.config }}
#          cmake --build . --parallel ${{ matrix.config.cores }} --config ${{ matrix.config.config }}
#        continue-on-error: true
      - name: Create packages
        working-directory: ./build
        run: ${{ matrix.config.sudocmd }} cpack
      - name: Archive Packages
        uses: actions/upload-artifact@v2
        with:
          name: Binary Packages ${{ matrix.config.artifact_name }}
          path: build/futures-?.?.?-*.*
      - name: Archive Single-Header as is
        uses: kittaakos/upload-artifact-as-is@v0
        with:
          path: build/source/single-header/futures/futures.h
      - name: Archive Installer Packages as is
        uses: kittaakos/upload-artifact-as-is@v0
        with:
          path: build/futures-?.?.?-*.*
