<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="default__partitioner_8hpp" kind="file" language="C++">
    <compoundname>default_partitioner.hpp</compoundname>
    <includes refid="config_8hpp" local="no">futures/config.hpp</includes>
    <includes refid="thread__partitioner_8hpp" local="no">futures/algorithm/partitioner/thread_partitioner.hpp</includes>
    <includes refid="is__input__range_8hpp" local="no">futures/algorithm/traits/is_input_range.hpp</includes>
    <includedby refid="partitioner_8hpp" local="no">futures/algorithm/partitioner.hpp</includedby>
    <includedby refid="binary__invoke__algorithm_8hpp" local="no">futures/algorithm/traits/binary_invoke_algorithm.hpp</includedby>
    <includedby refid="unary__invoke__algorithm_8hpp" local="no">futures/algorithm/traits/unary_invoke_algorithm.hpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>futures/algorithm/partitioner/default_partitioner.hpp</label>
        <link refid="default__partitioner_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>futures/algorithm/partitioner/thread_partitioner.hpp</label>
        <link refid="thread__partitioner_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>futures/algorithm/traits/is_assignable_from.hpp</label>
        <link refid="is__assignable__from_8hpp"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>futures/algorithm/traits/is_constructible_from.hpp</label>
        <link refid="is__constructible__from_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>futures/algorithm/traits/is_convertible_to.hpp</label>
        <link refid="is__convertible__to_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>futures/algorithm/traits/is_copyable.hpp</label>
        <link refid="is__copyable_8hpp"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>futures/algorithm/traits/is_default_initializable.hpp</label>
        <link refid="is__default__initializable_8hpp"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>futures/algorithm/traits/is_indirectly_readable.hpp</label>
        <link refid="is__indirectly__readable_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>futures/algorithm/traits/is_input_iterator.hpp</label>
        <link refid="is__input__iterator_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>futures/algorithm/traits/is_input_or_output_iterator.hpp</label>
        <link refid="is__input__or__output__iterator_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>futures/algorithm/traits/is_input_range.hpp</label>
        <link refid="is__input__range_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>futures/algorithm/traits/is_movable.hpp</label>
        <link refid="is__movable_8hpp"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>futures/algorithm/traits/is_move_constructible.hpp</label>
        <link refid="is__move__constructible_8hpp"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>futures/algorithm/traits/is_range.hpp</label>
        <link refid="is__range_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>futures/algorithm/traits/is_semiregular.hpp</label>
        <link refid="is__semiregular_8hpp"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>futures/algorithm/traits/is_sentinel_for.hpp</label>
        <link refid="is__sentinel__for_8hpp"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>futures/algorithm/traits/is_swappable.hpp</label>
        <link refid="is__swappable_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>futures/algorithm/traits/iter_reference.hpp</label>
        <link refid="iter__reference_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>futures/algorithm/traits/iter_rvalue_reference.hpp</label>
        <link refid="iter__rvalue__reference_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>futures/algorithm/traits/iter_value.hpp</label>
        <link refid="iter__value_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>futures/algorithm/traits/iterator.hpp</label>
        <link refid="iterator_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>futures/algorithm/traits/remove_cvref.hpp</label>
        <link refid="remove__cvref_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>futures/config.hpp</label>
        <link refid="config_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>futures/executor/hardware_concurrency.hpp</label>
        <link refid="hardware__concurrency_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>futures/algorithm/traits/detail/has_element_type.hpp</label>
      </node>
      <node id="14">
        <label>futures/algorithm/traits/detail/has_iterator_traits_value_type.hpp</label>
      </node>
      <node id="15">
        <label>futures/algorithm/traits/detail/has_value_type.hpp</label>
      </node>
      <node id="3">
        <label>futures/detail/config.hpp</label>
      </node>
      <node id="11">
        <label>futures/detail/deps/boost/mp11/utility.hpp</label>
      </node>
      <node id="17">
        <label>futures/detail/traits/std_type_traits.hpp</label>
      </node>
      <node id="31">
        <label>futures/detail/utility/is_constant_evaluated.hpp</label>
      </node>
      <node id="4">
        <label>futures/impl/config.hpp</label>
      </node>
      <node id="16">
        <label>iterator</label>
      </node>
      <node id="32">
        <label>thread</label>
      </node>
      <node id="12">
        <label>type_traits</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>futures/algorithm.hpp</label>
        <link refid="algorithm_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>futures/algorithm/all_of.hpp</label>
        <link refid="all__of_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>futures/algorithm/any_of.hpp</label>
        <link refid="any__of_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>futures/algorithm/count.hpp</label>
        <link refid="count_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>futures/algorithm/count_if.hpp</label>
        <link refid="count__if_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>futures/algorithm/find.hpp</label>
        <link refid="find_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>futures/algorithm/find_if.hpp</label>
        <link refid="find__if_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>futures/algorithm/find_if_not.hpp</label>
        <link refid="find__if__not_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>futures/algorithm/for_each.hpp</label>
        <link refid="for__each_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>futures/algorithm/none_of.hpp</label>
        <link refid="none__of_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>futures/algorithm/partitioner.hpp</label>
        <link refid="partitioner_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>futures/algorithm/partitioner/default_partitioner.hpp</label>
        <link refid="default__partitioner_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>futures/algorithm/reduce.hpp</label>
        <link refid="reduce_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>futures/algorithm/traits.hpp</label>
        <link refid="algorithm_2traits_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>futures/algorithm/traits/binary_invoke_algorithm.hpp</label>
        <link refid="binary__invoke__algorithm_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>futures/algorithm/traits/unary_invoke_algorithm.hpp</label>
        <link refid="unary__invoke__algorithm_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>futures/futures.hpp</label>
        <link refid="futures_8hpp"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacefutures">futures</innernamespace>
    <briefdescription>
<para>Default Partitioner. </para>
    </briefdescription>
    <detaileddescription>
<para>Define the default partitioner </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2023<sp/>alandefreitas<sp/>(alandefreitas@gmail.com)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>Boost<sp/>Software<sp/>License,<sp/>Version<sp/>1.0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>https://www.boost.org/LICENSE_1_0.txt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FUTURES_ALGORITHM_PARTITIONER_DEFAULT_PARTITIONER_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FUTURES_ALGORITHM_PARTITIONER_DEFAULT_PARTITIONER_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="config_8hpp" kindref="compound">futures/config.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="thread__partitioner_8hpp" kindref="compound">futures/algorithm/partitioner/thread_partitioner.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="is__input__range_8hpp" kindref="compound">futures/algorithm/traits/is_input_range.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacefutures" kindref="compound">futures</ref><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="group__partitioners_1ga1dfbb885c6bb2f86870d55160dd16783" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="group__partitioners_1ga1dfbb885c6bb2f86870d55160dd16783" kindref="member">default_partitioner</ref><sp/>=<sp/>FUTURES_DETAIL(<ref refid="classfutures_1_1thread__partitioner" kindref="compound">thread_partitioner</ref>);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>FUTURES_CONSTANT_EVALUATED_CONSTEXPR<sp/>std::size_t</highlight></codeline>
<codeline lineno="47" refid="group__partitioners_1ga20c9290c9184f57260f5d6f8692d73b6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__partitioners_1ga20c9290c9184f57260f5d6f8692d73b6" kindref="member">make_grain_size</ref>(std::size_t<sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>nthreads<sp/>=<sp/><ref refid="group__executors_1gaa58c1bc10fe96080f355b709a30473f6" kindref="member">futures::hardware_concurrency</ref>();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>safe_nthreads<sp/>=<sp/>std::</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max(nthreads,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">std::size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(1));</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>expected_nthreads<sp/>=<sp/>8<sp/>*<sp/>safe_nthreads;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>grain_per_thread<sp/>=<sp/>n<sp/>/<sp/>expected_nthreads;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>grain_per_thread<sp/>&lt;<sp/>size_t(1)<sp/>?</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_t(1)<sp/>:</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_t(2048)<sp/>&lt;<sp/>grain_per_thread<sp/>?</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_t(2048)<sp/>:</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grain_per_thread;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="group__partitioners_1ga1dfbb885c6bb2f86870d55160dd16783" kindref="member">default_partitioner</ref></highlight></codeline>
<codeline lineno="66" refid="group__partitioners_1ga47766e8c4150a6b098bf298023669558" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__partitioners_1ga47766e8c4150a6b098bf298023669558" kindref="member">make_default_partitioner</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__partitioners_1ga1dfbb885c6bb2f86870d55160dd16783" kindref="member">default_partitioner</ref>(<ref refid="group__partitioners_1ga20c9290c9184f57260f5d6f8692d73b6" kindref="member">make_grain_size</ref>(n));</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FUTURES_HAS_CONCEPTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::input_iterator<sp/>I,<sp/>std::sentinel_for&lt;I&gt;<sp/>S&gt;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">I,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">S,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::enable_if_t&lt;is_input_iterator_v&lt;I&gt;<sp/>&amp;&amp;<sp/>is_sentinel_for_v&lt;S,<sp/>I&gt;,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__partitioners_1ga1dfbb885c6bb2f86870d55160dd16783" kindref="member">default_partitioner</ref></highlight></codeline>
<codeline lineno="85" refid="group__partitioners_1ga39395da895517ad34cfa27ef8b1d6d87" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__partitioners_1ga47766e8c4150a6b098bf298023669558" kindref="member">make_default_partitioner</ref>(I<sp/>first,<sp/>S<sp/>last)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__partitioners_1ga47766e8c4150a6b098bf298023669558" kindref="member">make_default_partitioner</ref>(std::distance(first,<sp/>last));</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FUTURES_HAS_CONCEPTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>R&gt;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal"><sp/>is_input_range_v&lt;R&gt;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>R,<sp/>std::enable_if_t&lt;is_input_range_v&lt;R&gt;,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__partitioners_1ga1dfbb885c6bb2f86870d55160dd16783" kindref="member">default_partitioner</ref></highlight></codeline>
<codeline lineno="101" refid="group__partitioners_1ga27d6c718a4152cd510382df27662a199" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__partitioners_1ga47766e8c4150a6b098bf298023669558" kindref="member">make_default_partitioner</ref>(R<sp/>&amp;&amp;r)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__partitioners_1ga47766e8c4150a6b098bf298023669558" kindref="member">make_default_partitioner</ref>(std::begin(r),<sp/>std::end(r));</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>@addtogroup<sp/>partitioners<sp/>Partitioners<sp/>//<sp/>@addtogroup<sp/>algorithms<sp/>Algorithms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>futures</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>FUTURES_ALGORITHM_PARTITIONER_DEFAULT_PARTITIONER_HPP</highlight></codeline>
    </programlisting>
    <location file="futures/algorithm/partitioner/default_partitioner.hpp"/>
  </compounddef>
</doxygen>
