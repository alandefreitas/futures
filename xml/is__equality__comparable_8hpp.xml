<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="is__equality__comparable_8hpp" kind="file" language="C++">
    <compoundname>is_equality_comparable.hpp</compoundname>
    <includes refid="config_8hpp" local="no">futures/config.hpp</includes>
    <includes local="no">futures/algorithm/traits/detail/is_weakly_equality_comparable_with.hpp</includes>
    <includes local="no">type_traits</includes>
    <includedby refid="algorithm_2traits_8hpp" local="no">futures/algorithm/traits.hpp</includedby>
    <includedby refid="common__comparison__category_8hpp" local="no">futures/algorithm/traits/common_comparison_category.hpp</includedby>
    <includedby refid="is__equality__comparable__with_8hpp" local="no">futures/algorithm/traits/is_equality_comparable_with.hpp</includedby>
    <includedby refid="is__regular_8hpp" local="no">futures/algorithm/traits/is_regular.hpp</includedby>
    <includedby refid="is__three__way__comparable_8hpp" local="no">futures/algorithm/traits/is_three_way_comparable.hpp</includedby>
    <includedby refid="is__totally__ordered_8hpp" local="no">futures/algorithm/traits/is_totally_ordered.hpp</includedby>
    <includedby refid="is__totally__ordered__with_8hpp" local="no">futures/algorithm/traits/is_totally_ordered_with.hpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>futures/algorithm/traits/is_equality_comparable.hpp</label>
        <link refid="is__equality__comparable_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>futures/config.hpp</label>
        <link refid="config_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>futures/algorithm/traits/detail/is_weakly_equality_comparable_with.hpp</label>
      </node>
      <node id="3">
        <label>futures/detail/config.hpp</label>
      </node>
      <node id="4">
        <label>futures/impl/config.hpp</label>
      </node>
      <node id="6">
        <label>type_traits</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>futures/algorithm.hpp</label>
        <link refid="algorithm_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>futures/algorithm/all_of.hpp</label>
        <link refid="all__of_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>futures/algorithm/any_of.hpp</label>
        <link refid="any__of_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>futures/algorithm/compare.hpp</label>
        <link refid="compare_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>futures/algorithm/compare/compare_three_way.hpp</label>
        <link refid="compare__three__way_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>futures/algorithm/compare/equal_to.hpp</label>
        <link refid="equal__to_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>futures/algorithm/compare/greater.hpp</label>
        <link refid="greater_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>futures/algorithm/compare/greater_equal.hpp</label>
        <link refid="greater__equal_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>futures/algorithm/compare/less.hpp</label>
        <link refid="less_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>futures/algorithm/compare/less_equal.hpp</label>
        <link refid="less__equal_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>futures/algorithm/compare/not_equal_to.hpp</label>
        <link refid="not__equal__to_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>futures/algorithm/count.hpp</label>
        <link refid="count_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>futures/algorithm/count_if.hpp</label>
        <link refid="count__if_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>futures/algorithm/find.hpp</label>
        <link refid="find_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>futures/algorithm/find_if.hpp</label>
        <link refid="find__if_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>futures/algorithm/find_if_not.hpp</label>
        <link refid="find__if__not_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>futures/algorithm/for_each.hpp</label>
        <link refid="for__each_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>futures/algorithm/none_of.hpp</label>
        <link refid="none__of_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>futures/algorithm/reduce.hpp</label>
        <link refid="reduce_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>futures/algorithm/traits.hpp</label>
        <link refid="algorithm_2traits_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>futures/algorithm/traits/common_comparison_category.hpp</label>
        <link refid="common__comparison__category_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>futures/algorithm/traits/is_bidirectional_iterator.hpp</label>
        <link refid="is__bidirectional__iterator_8hpp"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>futures/algorithm/traits/is_equality_comparable.hpp</label>
        <link refid="is__equality__comparable_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>futures/algorithm/traits/is_equality_comparable_with.hpp</label>
        <link refid="is__equality__comparable__with_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>futures/algorithm/traits/is_forward_iterator.hpp</label>
        <link refid="is__forward__iterator_8hpp"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>futures/algorithm/traits/is_incrementable.hpp</label>
        <link refid="is__incrementable_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>futures/algorithm/traits/is_random_access_iterator.hpp</label>
        <link refid="is__random__access__iterator_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>futures/algorithm/traits/is_regular.hpp</label>
        <link refid="is__regular_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>futures/algorithm/traits/is_three_way_comparable.hpp</label>
        <link refid="is__three__way__comparable_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>futures/algorithm/traits/is_three_way_comparable_with.hpp</label>
        <link refid="is__three__way__comparable__with_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>futures/algorithm/traits/is_totally_ordered.hpp</label>
        <link refid="is__totally__ordered_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>futures/algorithm/traits/is_totally_ordered_with.hpp</label>
        <link refid="is__totally__ordered__with_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>futures/algorithm/traits/value_cmp_algorithm.hpp</label>
        <link refid="value__cmp__algorithm_8hpp"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>futures/futures.hpp</label>
        <link refid="futures_8hpp"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacefutures">futures</innernamespace>
    <briefdescription>
<para><computeroutput>is_equality_comparable</computeroutput> trait </para>
    </briefdescription>
    <detaileddescription>
<para>This file defines the <computeroutput>is_equality_comparable</computeroutput> trait. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2022<sp/>alandefreitas<sp/>(alandefreitas@gmail.com)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>Boost<sp/>Software<sp/>License,<sp/>Version<sp/>1.0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>https://www.boost.org/LICENSE_1_0.txt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FUTURES_ALGORITHM_TRAITS_IS_EQUALITY_COMPARABLE_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FUTURES_ALGORITHM_TRAITS_IS_EQUALITY_COMPARABLE_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="config_8hpp" kindref="compound">futures/config.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;futures/algorithm/traits/detail/is_weakly_equality_comparable_with.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cpp_lib_three_way_comparison</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>include<sp/>&lt;compare&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacefutures" kindref="compound">futures</ref><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(FUTURES_DOXYGEN)<sp/>||<sp/>defined(__cpp_lib_three_way_comparison)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="43" refid="group__traits_1ga700cff8b3f85ddd38376e54c9ca3e6b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="group__traits_1ga700cff8b3f85ddd38376e54c9ca3e6b8" kindref="member">is_equality_comparable</ref><sp/>=<sp/>std::bool_constant&lt;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::equality_comparable&lt;T&gt;&gt;;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="group__traits_1ga700cff8b3f85ddd38376e54c9ca3e6b8" kindref="member">is_equality_comparable</ref><sp/>=<sp/>detail::</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_weakly_equality_comparable_with&lt;T,<sp/>T&gt;;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="53" refid="group__traits_1ga8465918081b89b0713376f47aa9e51cf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__traits_1ga8465918081b89b0713376f47aa9e51cf" kindref="member">is_equality_comparable_v</ref><sp/>=<sp/><ref refid="group__traits_1ga700cff8b3f85ddd38376e54c9ca3e6b8" kindref="member">is_equality_comparable&lt;T&gt;::value</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>futures</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>FUTURES_ALGORITHM_TRAITS_IS_EQUALITY_COMPARABLE_HPP</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="futures/algorithm/traits/is_equality_comparable.hpp"/>
  </compounddef>
</doxygen>
