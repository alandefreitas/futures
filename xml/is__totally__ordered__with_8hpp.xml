<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="is__totally__ordered__with_8hpp" kind="file" language="C++">
    <compoundname>is_totally_ordered_with.hpp</compoundname>
    <includes refid="is__equality__comparable_8hpp" local="no">futures/algorithm/traits/is_equality_comparable.hpp</includes>
    <includes refid="is__equality__comparable__with_8hpp" local="no">futures/algorithm/traits/is_equality_comparable_with.hpp</includes>
    <includes refid="is__totally__ordered_8hpp" local="no">futures/algorithm/traits/is_totally_ordered.hpp</includes>
    <includes local="no">futures/detail/traits/std_type_traits.hpp</includes>
    <includes local="no">futures/algorithm/traits/detail/is_partially_ordered_with.hpp</includes>
    <includes local="no">futures/algorithm/traits/detail/is_weakly_equality_comparable_with.hpp</includes>
    <includes local="no">type_traits</includes>
    <includedby refid="less_8hpp" local="no">futures/algorithm/compare/less.hpp</includedby>
    <includedby refid="algorithm_2traits_8hpp" local="no">futures/algorithm/traits.hpp</includedby>
    <incdepgraph>
      <node id="2">
        <label>futures/algorithm/traits/is_equality_comparable.hpp</label>
        <link refid="is__equality__comparable_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>futures/algorithm/traits/is_equality_comparable_with.hpp</label>
        <link refid="is__equality__comparable__with_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>futures/algorithm/traits/is_totally_ordered.hpp</label>
        <link refid="is__totally__ordered_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>futures/algorithm/traits/is_totally_ordered_with.hpp</label>
        <link refid="is__totally__ordered__with_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>futures/config.hpp</label>
        <link refid="config_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>futures/algorithm/traits/detail/is_partially_ordered_with.hpp</label>
      </node>
      <node id="6">
        <label>futures/algorithm/traits/detail/is_weakly_equality_comparable_with.hpp</label>
      </node>
      <node id="4">
        <label>futures/detail/config.hpp</label>
      </node>
      <node id="9">
        <label>futures/detail/traits/std_type_traits.hpp</label>
      </node>
      <node id="5">
        <label>futures/impl/config.hpp</label>
      </node>
      <node id="7">
        <label>type_traits</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>futures/algorithm.hpp</label>
        <link refid="algorithm_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>futures/algorithm/compare.hpp</label>
        <link refid="compare_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>futures/algorithm/compare/compare_three_way.hpp</label>
        <link refid="compare__three__way_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>futures/algorithm/compare/greater.hpp</label>
        <link refid="greater_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>futures/algorithm/compare/greater_equal.hpp</label>
        <link refid="greater__equal_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>futures/algorithm/compare/less.hpp</label>
        <link refid="less_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>futures/algorithm/compare/less_equal.hpp</label>
        <link refid="less__equal_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>futures/algorithm/traits.hpp</label>
        <link refid="algorithm_2traits_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>futures/algorithm/traits/is_totally_ordered_with.hpp</label>
        <link refid="is__totally__ordered__with_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>futures/futures.hpp</label>
        <link refid="futures_8hpp"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacefutures">futures</innernamespace>
    <briefdescription>
<para><computeroutput>is_totally_ordered_with</computeroutput> trait </para>
    </briefdescription>
    <detaileddescription>
<para>This file defines the <computeroutput>is_totally_ordered_with</computeroutput> trait. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2022<sp/>alandefreitas<sp/>(alandefreitas@gmail.com)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>Boost<sp/>Software<sp/>License,<sp/>Version<sp/>1.0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>https://www.boost.org/LICENSE_1_0.txt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FUTURES_ALGORITHM_TRAITS_IS_TOTALLY_ORDERED_WITH_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FUTURES_ALGORITHM_TRAITS_IS_TOTALLY_ORDERED_WITH_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="is__equality__comparable_8hpp" kindref="compound">futures/algorithm/traits/is_equality_comparable.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="is__equality__comparable__with_8hpp" kindref="compound">futures/algorithm/traits/is_equality_comparable_with.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="is__totally__ordered_8hpp" kindref="compound">futures/algorithm/traits/is_totally_ordered.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;futures/detail/traits/std_type_traits.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;futures/algorithm/traits/detail/is_partially_ordered_with.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;futures/algorithm/traits/detail/is_weakly_equality_comparable_with.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacefutures" kindref="compound">futures</ref><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(FUTURES_DOXYGEN)<sp/>||<sp/>defined(__cpp_lib_three_way_comparison)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="41" refid="group__traits_1ga3e7a594dd861beb0287aab525b8d44d8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="group__traits_1ga3e7a594dd861beb0287aab525b8d44d8" kindref="member">is_totally_ordered_with</ref><sp/>=<sp/>std::bool_constant&lt;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::totally_ordered_with&lt;T,<sp/>U&gt;&gt;;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="group__traits_1ga3e7a594dd861beb0287aab525b8d44d8" kindref="member">is_totally_ordered_with</ref><sp/>=<sp/>detail::conjunction&lt;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__traits_1gacca0150c5cccef1847a596ff7dbfb85c" kindref="member">is_totally_ordered&lt;T&gt;</ref>,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__traits_1gacca0150c5cccef1847a596ff7dbfb85c" kindref="member">is_totally_ordered&lt;U&gt;</ref>,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__traits_1ga33c9e5b16ea99aea746e3bffa28cc56c" kindref="member">is_equality_comparable_with&lt;T, U&gt;</ref>,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::is_partially_ordered_with&lt;T,<sp/>U&gt;&gt;;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="54" refid="group__traits_1gafa9051526c36ea222da0f4d83f3d3b66" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__traits_1gafa9051526c36ea222da0f4d83f3d3b66" kindref="member">is_totally_ordered_with_v</ref><sp/>=<sp/><ref refid="group__traits_1ga3e7a594dd861beb0287aab525b8d44d8" kindref="member">is_totally_ordered_with&lt;T, U&gt;</ref>::</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>futures</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>FUTURES_ALGORITHM_TRAITS_IS_TOTALLY_ORDERED_WITH_HPP</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="futures/algorithm/traits/is_totally_ordered_with.hpp"/>
  </compounddef>
</doxygen>
