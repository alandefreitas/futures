<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="policies_8hpp" kind="file" language="C++">
    <compoundname>policies.hpp</compoundname>
    <includes refid="partitioner__for_8hpp" local="no">futures/algorithm/partitioner/partitioner_for.hpp</includes>
    <includes refid="is__sentinel__for_8hpp" local="no">futures/algorithm/traits/is_sentinel_for.hpp</includes>
    <includes refid="default__executor_8hpp" local="no">futures/executor/default_executor.hpp</includes>
    <includes refid="inline__executor_8hpp" local="no">futures/executor/inline_executor.hpp</includes>
    <includes local="no">futures/detail/traits/std_type_traits.hpp</includes>
    <includes local="no">futures/algorithm/detail/execution.hpp</includes>
    <includedby refid="algorithm_8hpp" local="no">futures/algorithm.hpp</includedby>
    <includedby refid="binary__invoke__algorithm_8hpp" local="no">futures/algorithm/traits/binary_invoke_algorithm.hpp</includedby>
    <includedby refid="unary__invoke__algorithm_8hpp" local="no">futures/algorithm/traits/unary_invoke_algorithm.hpp</includedby>
    <includedby refid="value__cmp__algorithm_8hpp" local="no">futures/algorithm/traits/value_cmp_algorithm.hpp</includedby>
    <incdepgraph>
      <node id="2">
        <label>futures/algorithm/partitioner/partitioner_for.hpp</label>
        <link refid="partitioner__for_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>futures/algorithm/policies.hpp</label>
        <link refid="policies_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>futures/algorithm/traits/is_assignable_from.hpp</label>
        <link refid="is__assignable__from_8hpp"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>futures/algorithm/traits/is_constructible_from.hpp</label>
        <link refid="is__constructible__from_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>futures/algorithm/traits/is_convertible_to.hpp</label>
        <link refid="is__convertible__to_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>futures/algorithm/traits/is_copyable.hpp</label>
        <link refid="is__copyable_8hpp"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>futures/algorithm/traits/is_default_initializable.hpp</label>
        <link refid="is__default__initializable_8hpp"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>futures/algorithm/traits/is_indirectly_readable.hpp</label>
        <link refid="is__indirectly__readable_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>futures/algorithm/traits/is_input_iterator.hpp</label>
        <link refid="is__input__iterator_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>futures/algorithm/traits/is_input_or_output_iterator.hpp</label>
        <link refid="is__input__or__output__iterator_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>futures/algorithm/traits/is_movable.hpp</label>
        <link refid="is__movable_8hpp"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>futures/algorithm/traits/is_move_constructible.hpp</label>
        <link refid="is__move__constructible_8hpp"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>futures/algorithm/traits/is_semiregular.hpp</label>
        <link refid="is__semiregular_8hpp"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>futures/algorithm/traits/is_sentinel_for.hpp</label>
        <link refid="is__sentinel__for_8hpp"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>futures/algorithm/traits/is_swappable.hpp</label>
        <link refid="is__swappable_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>futures/algorithm/traits/iter_reference.hpp</label>
        <link refid="iter__reference_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>futures/algorithm/traits/iter_rvalue_reference.hpp</label>
        <link refid="iter__rvalue__reference_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>futures/algorithm/traits/iter_value.hpp</label>
        <link refid="iter__value_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>futures/algorithm/traits/remove_cvref.hpp</label>
        <link refid="remove__cvref_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>futures/config.hpp</label>
        <link refid="config_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>futures/executor/default_executor.hpp</label>
        <link refid="default__executor_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>futures/executor/hardware_concurrency.hpp</label>
        <link refid="hardware__concurrency_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>futures/executor/inline_executor.hpp</label>
        <link refid="inline__executor_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>futures/executor/is_executor.hpp</label>
        <link refid="is__executor_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>futures/executor/thread_pool.hpp</label>
        <link refid="thread__pool_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>futures/algorithm/detail/execution.hpp</label>
      </node>
      <node id="13">
        <label>futures/algorithm/traits/detail/has_element_type.hpp</label>
      </node>
      <node id="14">
        <label>futures/algorithm/traits/detail/has_iterator_traits_value_type.hpp</label>
      </node>
      <node id="15">
        <label>futures/algorithm/traits/detail/has_value_type.hpp</label>
      </node>
      <node id="4">
        <label>futures/detail/config.hpp</label>
      </node>
      <node id="38">
        <label>futures/detail/deps/asio/thread_pool.hpp</label>
      </node>
      <node id="11">
        <label>futures/detail/deps/boost/mp11/utility.hpp</label>
      </node>
      <node id="17">
        <label>futures/detail/traits/std_type_traits.hpp</label>
      </node>
      <node id="30">
        <label>futures/detail/utility/invoke.hpp</label>
      </node>
      <node id="36">
        <label>futures/detail/utility/is_constant_evaluated.hpp</label>
      </node>
      <node id="33">
        <label>futures/executor/detail/is_executor.hpp</label>
      </node>
      <node id="5">
        <label>futures/impl/config.hpp</label>
      </node>
      <node id="16">
        <label>iterator</label>
      </node>
      <node id="37">
        <label>thread</label>
      </node>
      <node id="12">
        <label>type_traits</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>futures/algorithm.hpp</label>
        <link refid="algorithm_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>futures/algorithm/all_of.hpp</label>
        <link refid="all__of_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>futures/algorithm/any_of.hpp</label>
        <link refid="any__of_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>futures/algorithm/count.hpp</label>
        <link refid="count_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>futures/algorithm/count_if.hpp</label>
        <link refid="count__if_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>futures/algorithm/find.hpp</label>
        <link refid="find_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>futures/algorithm/find_if.hpp</label>
        <link refid="find__if_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>futures/algorithm/find_if_not.hpp</label>
        <link refid="find__if__not_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>futures/algorithm/for_each.hpp</label>
        <link refid="for__each_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>futures/algorithm/none_of.hpp</label>
        <link refid="none__of_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>futures/algorithm/policies.hpp</label>
        <link refid="policies_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>futures/algorithm/reduce.hpp</label>
        <link refid="reduce_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>futures/algorithm/traits.hpp</label>
        <link refid="algorithm_2traits_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>futures/algorithm/traits/binary_invoke_algorithm.hpp</label>
        <link refid="binary__invoke__algorithm_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>futures/algorithm/traits/unary_invoke_algorithm.hpp</label>
        <link refid="unary__invoke__algorithm_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>futures/algorithm/traits/value_cmp_algorithm.hpp</label>
        <link refid="value__cmp__algorithm_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>futures/futures.hpp</label>
        <link refid="futures_8hpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structfutures_1_1is__execution__policy" prot="public">futures::is_execution_policy</innerclass>
    <innerconcept refid="conceptfutures_1_1execution__policy">futures::execution_policy</innerconcept>
    <innernamespace refid="namespacefutures">futures</innernamespace>
    <briefdescription>
<para>Algorithm execution policies. </para>
    </briefdescription>
    <detaileddescription>
<para>This file defines the policies we can use to determine the appropriate executor for algorithms.</para>
<para>The traits help us generate auxiliary algorithm overloads This is somewhat similar to the pattern of traits and algorithms for ranges and views It allows us to get algorithm overloads for free, including default inference of the best execution policies</para>
<para><simplesect kind="see"><para><ulink url="https://en.cppreference.com/w/cpp/ranges/transform_view"><computeroutput>std::ranges::transform_view</computeroutput></ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="https://en.cppreference.com/w/cpp/ranges/view"><computeroutput>std::ranges::view</computeroutput></ulink> </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2021<sp/>alandefreitas<sp/>(alandefreitas@gmail.com)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>Boost<sp/>Software<sp/>License,<sp/>Version<sp/>1.0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>https://www.boost.org/LICENSE_1_0.txt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FUTURES_ALGORITHM_POLICIES_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FUTURES_ALGORITHM_POLICIES_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="partitioner__for_8hpp" kindref="compound">futures/algorithm/partitioner/partitioner_for.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="is__sentinel__for_8hpp" kindref="compound">futures/algorithm/traits/is_sentinel_for.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="default__executor_8hpp" kindref="compound">futures/executor/default_executor.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="inline__executor_8hpp" kindref="compound">futures/executor/inline_executor.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;futures/detail/traits/std_type_traits.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;futures/algorithm/detail/execution.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacefutures" kindref="compound">futures</ref><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FUTURES_HAS_STD_POLICIES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="group__execution-policies_1gaf5d088ab9052836d3d58c62a02697e26" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="group__execution-policies_1gaf5d088ab9052836d3d58c62a02697e26" kindref="member">sequenced_policy</ref><sp/>=<sp/>std::execution::sequenced_policy;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="group__execution-policies_1gaf5d088ab9052836d3d58c62a02697e26" kindref="member">sequenced_policy</ref><sp/>{};</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FUTURES_HAS_STD_POLICIES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="group__execution-policies_1gaeb6a426f21b797b63d6cfd5f1a4585ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="group__execution-policies_1gaeb6a426f21b797b63d6cfd5f1a4585ee" kindref="member">parallel_policy</ref><sp/>=<sp/>std::execution::parallel_policy;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="group__execution-policies_1gaeb6a426f21b797b63d6cfd5f1a4585ee" kindref="member">parallel_policy</ref><sp/>{};</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FUTURES_HAS_STD_POLICIES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="group__execution-policies_1ga1cfc7e6ec53363f996022ad8282b0cfe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="group__execution-policies_1ga1cfc7e6ec53363f996022ad8282b0cfe" kindref="member">parallel_unsequenced_policy</ref><sp/>=<sp/>std::execution::</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parallel_unsequenced_policy;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="group__execution-policies_1ga1cfc7e6ec53363f996022ad8282b0cfe" kindref="member">parallel_unsequenced_policy</ref><sp/>{};</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FUTURES_HAS_STD_POLICIES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="group__execution-policies_1gabaa708215fbcb22a94cc04f7ef726059" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="group__execution-policies_1gabaa708215fbcb22a94cc04f7ef726059" kindref="member">unsequenced_policy</ref><sp/>=<sp/>std::execution::unsequenced_policy;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="group__execution-policies_1gabaa708215fbcb22a94cc04f7ef726059" kindref="member">unsequenced_policy</ref><sp/>{};</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="group__execution-policies_1gabc55040ea2bc2503075ab0b70004899a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>FUTURES_INLINE_VAR<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="group__execution-policies_1gaf5d088ab9052836d3d58c62a02697e26" kindref="member">sequenced_policy</ref><sp/><ref refid="group__execution-policies_1gabc55040ea2bc2503075ab0b70004899a" kindref="member">seq</ref>{};</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="group__execution-policies_1ga15d309529b3196659d901c905bd0bbc6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>FUTURES_INLINE_VAR<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="group__execution-policies_1gaeb6a426f21b797b63d6cfd5f1a4585ee" kindref="member">parallel_policy</ref><sp/><ref refid="group__execution-policies_1ga15d309529b3196659d901c905bd0bbc6" kindref="member">par</ref>{};</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="group__execution-policies_1ga2dfc04fa043d76435dfc6531db67a93d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>FUTURES_INLINE_VAR<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="group__execution-policies_1ga1cfc7e6ec53363f996022ad8282b0cfe" kindref="member">parallel_unsequenced_policy</ref><sp/><ref refid="group__execution-policies_1ga2dfc04fa043d76435dfc6531db67a93d" kindref="member">par_unseq</ref>{};</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="group__execution-policies_1ga92c59cac6e6ea17c04b929917c037446" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>FUTURES_INLINE_VAR<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="group__execution-policies_1gabaa708215fbcb22a94cc04f7ef726059" kindref="member">unsequenced_policy</ref><sp/><ref refid="group__execution-policies_1ga92c59cac6e6ea17c04b929917c037446" kindref="member">unseq</ref>{};</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="105" refid="structfutures_1_1is__execution__policy" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfutures_1_1is__execution__policy" kindref="compound">is_execution_policy</ref></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>detail::disjunction&lt;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same&lt;T,<sp/>sequenced_policy&gt;,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same&lt;T,<sp/>parallel_policy&gt;,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same&lt;T,<sp/>parallel_unsequenced_policy&gt;,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same&lt;T,<sp/>unsequenced_policy&gt;&gt;<sp/>{};</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="114" refid="group__execution-policies_1ga91acd0da3465836ab08bfa9ed016d2dd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>FUTURES_INLINE_VAR<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__execution-policies_1ga91acd0da3465836ab08bfa9ed016d2dd" kindref="member">is_execution_policy_v</ref></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="structfutures_1_1is__execution__policy" kindref="compound">is_execution_policy&lt;T&gt;::value</ref>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FUTURES_HAS_CONCEPTS</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>E&gt;</highlight></codeline>
<codeline lineno="121" refid="conceptfutures_1_1execution__policy" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">concept<sp/></highlight><highlight class="normal"><ref refid="conceptfutures_1_1execution__policy" kindref="compound">execution_policy</ref><sp/>=<sp/>is_execution_policy_v&lt;E&gt;;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>futures</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>FUTURES_ALGORITHM_POLICIES_HPP</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="futures/algorithm/policies.hpp"/>
  </compounddef>
</doxygen>
