<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="structfutures_1_1less__equal" kind="struct" language="C++" prot="public">
    <compoundname>futures::less_equal</compoundname>
    <includes refid="less__equal_8hpp" local="no">less_equal.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structfutures_1_1less__equal_1a784db1a22dd681c02deb85cbb4c5cc9a" prot="public" static="no">
        <type>void</type>
        <definition>using futures::less_equal::is_transparent =  void</definition>
        <argsstring></argsstring>
        <name>is_transparent</name>
        <qualifiedname>futures::less_equal::is_transparent</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="futures/algorithm/compare/less_equal.hpp" line="32" column="9" bodyfile="futures/algorithm/compare/less_equal.hpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structfutures_1_1less__equal_1a62aa5c718bce4b9bff907f106e1c2d08" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class U</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool futures::less_equal::operator()</definition>
        <argsstring>(T &amp;&amp;t, U &amp;&amp;u) const</argsstring>
        <name>operator()</name>
        <qualifiedname>futures::less_equal::operator()</qualifiedname>
        <param>
          <type>T &amp;&amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>U &amp;&amp;</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="futures/algorithm/compare/less_equal.hpp" line="29" column="9" bodyfile="futures/algorithm/compare/less_equal.hpp" bodystart="29" bodyend="31"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A C++17 functor equivalent to the C++20 std::ranges::less_equal. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="see"><para><ulink url="https://en.cppreference.com/w/cpp/utility/functional/less"><computeroutput>std::less</computeroutput></ulink> </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="futures/algorithm/compare/less_equal.hpp" line="27" column="5" bodyfile="futures/algorithm/compare/less_equal.hpp" bodystart="27" bodyend="33"/>
    <listofallmembers>
      <member refid="structfutures_1_1less__equal_1a784db1a22dd681c02deb85cbb4c5cc9a" prot="public" virt="non-virtual"><scope>futures::less_equal</scope><name>is_transparent</name></member>
      <member refid="structfutures_1_1less__equal_1a62aa5c718bce4b9bff907f106e1c2d08" prot="public" virt="non-virtual"><scope>futures::less_equal</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
